{"version":3,"sources":["webpack:///./projects/ngx-rut/src/lib/ngx-rut.module.ts","webpack:///./projects/ngx-rut/src/lib/rut.directive.ts","webpack:///./projects/ngx-rut/src/lib/rut.pipe.ts","webpack:///./projects/ngx-rut/src/lib/rut.validator.ts","webpack:///./projects/ngx-rut/src/public_api.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RutPipe } from \"./rut.pipe\";\nimport { RutValidator } from \"./rut.validator\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RutDirective } from \"./rut.directive\";\n\n@NgModule({\n  declarations: [RutPipe, RutValidator, RutDirective],\n  imports: [FormsModule],\n  providers: [],\n  exports: [RutPipe, RutValidator, RutDirective]\n})\nexport class NgxRutModule {}\n","import { Directive, EventEmitter, Output, HostListener } from \"@angular/core\";\r\nimport * as rutHelpers from \"rut-helpers\";\r\n\r\n@Directive({\r\n  selector: \"[rutFormat]\"\r\n})\r\nexport class RutDirective {\r\n  private readonly KEY_ENTER = \"Enter\";\r\n\r\n  @Output()\r\n  public rutChange: EventEmitter<string>;\r\n\r\n  public constructor() {\r\n    this.rutChange = new EventEmitter();\r\n  }\r\n\r\n  @HostListener(\"focus\", [\"$event\"])\r\n  public onFocus(ev: Event) {\r\n    const htmlInputElement: HTMLInputElement = <HTMLInputElement>ev.target;\r\n    htmlInputElement.value = rutHelpers.rutClean(htmlInputElement.value);\r\n  }\r\n\r\n  @HostListener(\"blur\", [\"$event\"])\r\n  public onBlur(ev: Event) {\r\n    const htmlInputElement: HTMLInputElement = <HTMLInputElement>ev.target;\r\n    htmlInputElement.value = rutHelpers.rutFormat(htmlInputElement.value) || \"\";\r\n  }\r\n\r\n  @HostListener(\"input\", [\"$event\"])\r\n  public onChange(ev: Event) {\r\n    const htmlInputElement: HTMLInputElement = <HTMLInputElement>ev.target;\r\n    this.rutChange.emit(rutHelpers.rutClean(htmlInputElement.value));\r\n  }\r\n\r\n  @HostListener(\"keypress\", [\"$event\"])\r\n  public onKeyPress(event: KeyboardEvent) {\r\n    const regex = new RegExp(`^[0-9]`);\r\n    const k = new RegExp(`^[kK]`);\r\n    return event.key !== this.KEY_ENTER\r\n      ? regex.test(event.key) || k.test(event.key)\r\n      : true;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { rutFormat, rutClean } from \"rut-helpers\";\n\n@Pipe({\n  name: \"rut\"\n})\nexport class RutPipe implements PipeTransform {\n  public transform(value: string, format = true): string {\n    if (!format) {\n      return rutClean(value);\n    }\n    return rutFormat(value);\n  }\n}\n","import { Directive } from \"@angular/core\";\r\nimport {\r\n  NG_VALIDATORS,\r\n  FormControl,\r\n  AbstractControl,\r\n  ValidationErrors,\r\n  Validator\r\n} from \"@angular/forms\";\r\nimport { rutValidate } from \"rut-helpers\";\r\n\r\nfunction validate(rut): ValidationErrors | null {\r\n  return rutValidate(rut) ? null : { invalidRut: true };\r\n}\r\n\r\n@Directive({\r\n  selector:\r\n    \"[rutValidate][ngModel],[rutValidate][formControl],[rutValidate][formControlName]\",\r\n  providers: [\r\n    { provide: NG_VALIDATORS, useExisting: RutValidator, multi: true }\r\n  ]\r\n})\r\nexport class RutValidator implements Validator {\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    return validate(control.value);\r\n  }\r\n}\r\n\r\nexport function rutValidator(control: FormControl): ValidationErrors | null {\r\n  return validate(control.value);\r\n}\r\n","/*\n * Public API Surface of ngx-rut\n */\n\nexport * from \"./lib/ngx-rut.module\";\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>{{ title }}</h1>\\n<h2>RutPipe: {{ \\\"192434653\\\" | rut }}</h2>\\n\\n<h2>Reactive Form</h2>\\n\\n<form [formGroup]=\\\"reactiveForm\\\">\\n  <input formControlName=\\\"rut\\\" type=\\\"text\\\" rutFormat />\\n  <p>error: {{ reactiveForm.get(\\\"rut\\\").errors | json }}</p>\\n  <p>value: {{ reactiveForm.get(\\\"rut\\\").value | rut }}</p>\\n</form>\\n\\n<h2>Template Form</h2>\\n<form #templateForm=\\\"ngForm\\\">\\n  <input\\n    [(ngModel)]=\\\"rut\\\"\\n    name=\\\"rut\\\"\\n    type=\\\"text\\\"\\n    #rutInput=\\\"ngModel\\\"\\n    rutValidate\\n    rutFormat\\n    required\\n  />\\n  <p>error: {{ rutInput.errors | json }}</p>\\n  <p>value: {{ rut | rut }}</p>\\n</form>\\n\"","import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { RutValidator } from \"../../projects/ngx-rut/src/lib/rut.validator\";\nimport { RutPipe } from \"../../projects/ngx-rut/src/lib/rut.pipe\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  title = \"ngx-rut-demo\";\n  reactiveForm: FormGroup;\n  rut = \"\";\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly rutPipe: RutPipe\n  ) {\n    this.reactiveForm = this.fb.group({\n      rut: [\n        this.rutPipe.transform(\"30972198\"),\n        [Validators.required, RutValidator]\n      ]\n    });\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { NgxRutModule } from \"../../projects/ngx-rut/src/public_api\";\n\nimport { AppComponent } from \"./app.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RutPipe } from \"../../projects/ngx-rut/src/lib/rut.pipe\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FormsModule, ReactiveFormsModule, NgxRutModule],\n  providers: [RutPipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}